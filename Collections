1. Create an ArrayList of type String with 10 string elements. Add 10 string elements to 
ArrayList and perform the below operations 
Add an element to the ArrayList 
Iterate through the ArrayList by using Iterator object 
Add an element at a specific index 
Remove an element from the ArrayList, Remove at an index 
Update the element at a specific index 
Check the element is present at a particular index 
Get an element at a particular index 
Find out the size of the ArrayList 
Check the given element is present in the ArrayList 
Remove all elements of the ArrayList 

Solution:

import java.util.*;
class CollectionDemo1 {
    public static void main(String[] args) {
        ArrayList<String> list = new ArrayList<>();
        for (int i = 0; i < 10; i++) {
            list.add("Item" + i);
        }

        list.add("NewItem"); 

        Iterator<String> itr = list.iterator();
        while (itr.hasNext()) {
            System.out.println(itr.next());
        }

        list.add(5, "InsertedAt5"); 
        list.remove("Item1"); 
        list.remove(2); 
        list.set(3, "UpdatedAt3"); 

        System.out.println("Element at index 4: " + list.get(4));
        System.out.println("Contains 'Item5': " + list.contains("Item5"));
        System.out.println("Size: " + list.size());

        list.clear(); 
        System.out.println("List after clear: " + list);
    }
}
 
 
2. Create a HashMap with at least 10 key value pairs of the Student ID and Name 
Insert a Key value mapping into the map 
Fetch the value of a Key 
Create a clone/copy of HashMap 
Check if the given Key is in the Map 
Check if the value is in the Map 
Check if the map is empty 
Print the size of the Map to the console 
Print all the Keys of the map to the console 
Print all the Keys of the map to the console 
Remove a specific Key-value pair 
Copy all the elements of the Map to another Map 

Solution:

class CollectionDemo2 {
    public static void main(String[] args) {
        HashMap<Integer, String> map = new HashMap<>();
        for (int i = 1; i <= 10; i++) {
            map.put(i, "Student" + i);
        }

        map.put(11, "Student11"); 
        System.out.println("Value for key 5: " + map.get(5)); 

        HashMap<Integer, String> copyMap = new HashMap<>(map); 
        System.out.println("Contains key 3: " + map.containsKey(3));
        System.out.println("Contains value 'Student7': " + map.containsValue("Student7"));
        System.out.println("Is map empty: " + map.isEmpty());
        System.out.println("Size: " + map.size());

        System.out.println("Keys: " + map.keySet());
        System.out.println("Values: " + map.values());

        map.remove(2); 

        HashMap<Integer, String> newMap = new HashMap<>();
        newMap.putAll(map); 
        System.out.println("New Map: " + newMap);
    }
}
 
 
3. Create a HashSet with at least 10 elements of type String .Write program covering all the operations of HashSet.

solution:

class CollectionDemo3 {
    public static void main(String[] args) {
        HashSet<String> set = new HashSet<>();
        for (int i = 1; i <= 10; i++) {
            set.add("Item" + i);
        }

        set.add("NewItem");
        set.remove("Item5"); 
        System.out.println("Contains 'Item3': " + set.contains("Item3")); 
        System.out.println("Is empty: " + set.isEmpty()); // Is empty
        System.out.println("Size: " + set.size()); // Size

        for (String s : set) {
            System.out.println(s);
        }

        set.clear(); 
        System.out.println("After clear: " + set);
    }
}
